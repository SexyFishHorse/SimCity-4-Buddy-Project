//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("NIHEI.SC4Buddy.Entities.Remote", "FK_Author_User", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NIHEI.SC4Buddy.Entities.Remote.User), "Author", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NIHEI.SC4Buddy.Entities.Remote.Author), true)]
[assembly: EdmRelationshipAttribute("NIHEI.SC4Buddy.Entities.Remote", "FK_Plugin_Author", "Author", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(NIHEI.SC4Buddy.Entities.Remote.Author), "Plugin", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NIHEI.SC4Buddy.Entities.Remote.RemotePlugin), true)]
[assembly: EdmRelationshipAttribute("NIHEI.SC4Buddy.Entities.Remote", "FK_PluginFile_Plugin", "Plugin", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NIHEI.SC4Buddy.Entities.Remote.RemotePlugin), "PluginFile", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NIHEI.SC4Buddy.Entities.Remote.RemotePluginFile), true)]
[assembly: EdmRelationshipAttribute("NIHEI.SC4Buddy.Entities.Remote", "PluginDependency", "Plugin", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NIHEI.SC4Buddy.Entities.Remote.RemotePlugin), "Plugin1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NIHEI.SC4Buddy.Entities.Remote.RemotePlugin))]
[assembly: EdmRelationshipAttribute("NIHEI.SC4Buddy.Entities.Remote", "FK_PluginReport_0", "RemotePlugin", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(NIHEI.SC4Buddy.Entities.Remote.RemotePlugin), "PluginReport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(NIHEI.SC4Buddy.Entities.Remote.PluginReport), true)]

#endregion

namespace NIHEI.SC4Buddy.Entities.Remote
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class RemoteDatabaseEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new RemoteDatabaseEntities object using the connection string found in the 'RemoteDatabaseEntities' section of the application configuration file.
        /// </summary>
        public RemoteDatabaseEntities() : base("name=RemoteDatabaseEntities", "RemoteDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RemoteDatabaseEntities object.
        /// </summary>
        public RemoteDatabaseEntities(string connectionString) : base(connectionString, "RemoteDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new RemoteDatabaseEntities object.
        /// </summary>
        public RemoteDatabaseEntities(EntityConnection connection) : base(connection, "RemoteDatabaseEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Author> Authors
        {
            get
            {
                if ((_Authors == null))
                {
                    _Authors = base.CreateObjectSet<Author>("Authors");
                }
                return _Authors;
            }
        }
        private ObjectSet<Author> _Authors;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RemotePlugin> RemotePlugins
        {
            get
            {
                if ((_RemotePlugins == null))
                {
                    _RemotePlugins = base.CreateObjectSet<RemotePlugin>("RemotePlugins");
                }
                return _RemotePlugins;
            }
        }
        private ObjectSet<RemotePlugin> _RemotePlugins;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RemotePluginFile> RemotePluginFiles
        {
            get
            {
                if ((_RemotePluginFiles == null))
                {
                    _RemotePluginFiles = base.CreateObjectSet<RemotePluginFile>("RemotePluginFiles");
                }
                return _RemotePluginFiles;
            }
        }
        private ObjectSet<RemotePluginFile> _RemotePluginFiles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<PluginReport> PluginReports
        {
            get
            {
                if ((_PluginReports == null))
                {
                    _PluginReports = base.CreateObjectSet<PluginReport>("PluginReports");
                }
                return _PluginReports;
            }
        }
        private ObjectSet<PluginReport> _PluginReports;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Authors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthors(Author author)
        {
            base.AddObject("Authors", author);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RemotePlugins EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRemotePlugins(RemotePlugin remotePlugin)
        {
            base.AddObject("RemotePlugins", remotePlugin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RemotePluginFiles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRemotePluginFiles(RemotePluginFile remotePluginFile)
        {
            base.AddObject("RemotePluginFiles", remotePluginFile);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the PluginReports EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPluginReports(PluginReport pluginReport)
        {
            base.AddObject("PluginReports", pluginReport);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NIHEI.SC4Buddy.Entities.Remote", Name="Author")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Author : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Author object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="site">Initial value of the Site property.</param>
        public static Author CreateAuthor(global::System.Int32 id, global::System.String name, global::System.String site)
        {
            Author author = new Author();
            author.Id = id;
            author.Name = name;
            author.Site = site;
            return author;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value, "UserId");
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private Nullable<global::System.Int32> _UserId;
        partial void OnUserIdChanging(Nullable<global::System.Int32> value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Site
        {
            get
            {
                return _Site;
            }
            set
            {
                OnSiteChanging(value);
                ReportPropertyChanging("Site");
                _Site = StructuralObject.SetValidValue(value, false, "Site");
                ReportPropertyChanged("Site");
                OnSiteChanged();
            }
        }
        private global::System.String _Site;
        partial void OnSiteChanging(global::System.String value);
        partial void OnSiteChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NIHEI.SC4Buddy.Entities.Remote", "FK_Author_User", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NIHEI.SC4Buddy.Entities.Remote.FK_Author_User", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NIHEI.SC4Buddy.Entities.Remote.FK_Author_User", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("NIHEI.SC4Buddy.Entities.Remote.FK_Author_User", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("NIHEI.SC4Buddy.Entities.Remote.FK_Author_User", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NIHEI.SC4Buddy.Entities.Remote", "FK_Plugin_Author", "Plugin")]
        public EntityCollection<RemotePlugin> Plugins
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RemotePlugin>("NIHEI.SC4Buddy.Entities.Remote.FK_Plugin_Author", "Plugin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RemotePlugin>("NIHEI.SC4Buddy.Entities.Remote.FK_Plugin_Author", "Plugin", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NIHEI.SC4Buddy.Entities.Remote", Name="PluginReport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PluginReport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new PluginReport object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="body">Initial value of the Body property.</param>
        /// <param name="approved">Initial value of the Approved property.</param>
        /// <param name="pluginId">Initial value of the PluginId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static PluginReport CreatePluginReport(global::System.Int32 id, global::System.String body, global::System.Boolean approved, global::System.Int32 pluginId, global::System.DateTime date)
        {
            PluginReport pluginReport = new PluginReport();
            pluginReport.Id = id;
            pluginReport.Body = body;
            pluginReport.Approved = approved;
            pluginReport.PluginId = pluginId;
            pluginReport.Date = date;
            return pluginReport;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Body
        {
            get
            {
                return _Body;
            }
            set
            {
                OnBodyChanging(value);
                ReportPropertyChanging("Body");
                _Body = StructuralObject.SetValidValue(value, false, "Body");
                ReportPropertyChanged("Body");
                OnBodyChanged();
            }
        }
        private global::System.String _Body;
        partial void OnBodyChanging(global::System.String value);
        partial void OnBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Approved
        {
            get
            {
                return _Approved;
            }
            set
            {
                OnApprovedChanging(value);
                ReportPropertyChanging("Approved");
                _Approved = StructuralObject.SetValidValue(value, "Approved");
                ReportPropertyChanged("Approved");
                OnApprovedChanged();
            }
        }
        private global::System.Boolean _Approved;
        partial void OnApprovedChanging(global::System.Boolean value);
        partial void OnApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PluginId
        {
            get
            {
                return _PluginId;
            }
            set
            {
                OnPluginIdChanging(value);
                ReportPropertyChanging("PluginId");
                _PluginId = StructuralObject.SetValidValue(value, "PluginId");
                ReportPropertyChanged("PluginId");
                OnPluginIdChanged();
            }
        }
        private global::System.Int32 _PluginId;
        partial void OnPluginIdChanging(global::System.Int32 value);
        partial void OnPluginIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, "Date");
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NIHEI.SC4Buddy.Entities.Remote", "FK_PluginReport_0", "RemotePlugin")]
        public RemotePlugin Plugin
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RemotePlugin>("NIHEI.SC4Buddy.Entities.Remote.FK_PluginReport_0", "RemotePlugin").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RemotePlugin>("NIHEI.SC4Buddy.Entities.Remote.FK_PluginReport_0", "RemotePlugin").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RemotePlugin> PluginReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RemotePlugin>("NIHEI.SC4Buddy.Entities.Remote.FK_PluginReport_0", "RemotePlugin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RemotePlugin>("NIHEI.SC4Buddy.Entities.Remote.FK_PluginReport_0", "RemotePlugin", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NIHEI.SC4Buddy.Entities.Remote", Name="RemotePlugin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RemotePlugin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RemotePlugin object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="link">Initial value of the Link property.</param>
        public static RemotePlugin CreateRemotePlugin(global::System.Int32 id, global::System.String name, global::System.String link)
        {
            RemotePlugin remotePlugin = new RemotePlugin();
            remotePlugin.Id = id;
            remotePlugin.Name = name;
            remotePlugin.Link = link;
            return remotePlugin;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> AuthorId
        {
            get
            {
                return _AuthorId;
            }
            set
            {
                OnAuthorIdChanging(value);
                ReportPropertyChanging("AuthorId");
                _AuthorId = StructuralObject.SetValidValue(value, "AuthorId");
                ReportPropertyChanged("AuthorId");
                OnAuthorIdChanged();
            }
        }
        private Nullable<global::System.Int32> _AuthorId;
        partial void OnAuthorIdChanging(Nullable<global::System.Int32> value);
        partial void OnAuthorIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true, "Description");
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Link
        {
            get
            {
                return _Link;
            }
            set
            {
                OnLinkChanging(value);
                ReportPropertyChanging("Link");
                _Link = StructuralObject.SetValidValue(value, false, "Link");
                ReportPropertyChanged("Link");
                OnLinkChanged();
            }
        }
        private global::System.String _Link;
        partial void OnLinkChanging(global::System.String value);
        partial void OnLinkChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NIHEI.SC4Buddy.Entities.Remote", "FK_Plugin_Author", "Author")]
        public Author Author
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("NIHEI.SC4Buddy.Entities.Remote.FK_Plugin_Author", "Author").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("NIHEI.SC4Buddy.Entities.Remote.FK_Plugin_Author", "Author").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Author> AuthorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Author>("NIHEI.SC4Buddy.Entities.Remote.FK_Plugin_Author", "Author");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Author>("NIHEI.SC4Buddy.Entities.Remote.FK_Plugin_Author", "Author", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NIHEI.SC4Buddy.Entities.Remote", "FK_PluginFile_Plugin", "PluginFile")]
        public EntityCollection<RemotePluginFile> PluginFiles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RemotePluginFile>("NIHEI.SC4Buddy.Entities.Remote.FK_PluginFile_Plugin", "PluginFile");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RemotePluginFile>("NIHEI.SC4Buddy.Entities.Remote.FK_PluginFile_Plugin", "PluginFile", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NIHEI.SC4Buddy.Entities.Remote", "PluginDependency", "Plugin1")]
        public EntityCollection<RemotePlugin> Dependencies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RemotePlugin>("NIHEI.SC4Buddy.Entities.Remote.PluginDependency", "Plugin1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RemotePlugin>("NIHEI.SC4Buddy.Entities.Remote.PluginDependency", "Plugin1", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NIHEI.SC4Buddy.Entities.Remote", "PluginDependency", "Plugin")]
        public EntityCollection<RemotePlugin> DependencyFor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RemotePlugin>("NIHEI.SC4Buddy.Entities.Remote.PluginDependency", "Plugin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RemotePlugin>("NIHEI.SC4Buddy.Entities.Remote.PluginDependency", "Plugin", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NIHEI.SC4Buddy.Entities.Remote", "FK_PluginReport_0", "PluginReport")]
        public EntityCollection<PluginReport> Reports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<PluginReport>("NIHEI.SC4Buddy.Entities.Remote.FK_PluginReport_0", "PluginReport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<PluginReport>("NIHEI.SC4Buddy.Entities.Remote.FK_PluginReport_0", "PluginReport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NIHEI.SC4Buddy.Entities.Remote", Name="RemotePluginFile")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RemotePluginFile : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RemotePluginFile object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="checksum">Initial value of the Checksum property.</param>
        /// <param name="pluginId">Initial value of the PluginId property.</param>
        public static RemotePluginFile CreateRemotePluginFile(global::System.Int32 id, global::System.String name, global::System.String checksum, global::System.Int32 pluginId)
        {
            RemotePluginFile remotePluginFile = new RemotePluginFile();
            remotePluginFile.Id = id;
            remotePluginFile.Name = name;
            remotePluginFile.Checksum = checksum;
            remotePluginFile.PluginId = pluginId;
            return remotePluginFile;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false, "Name");
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Checksum
        {
            get
            {
                return _Checksum;
            }
            set
            {
                OnChecksumChanging(value);
                ReportPropertyChanging("Checksum");
                _Checksum = StructuralObject.SetValidValue(value, false, "Checksum");
                ReportPropertyChanged("Checksum");
                OnChecksumChanged();
            }
        }
        private global::System.String _Checksum;
        partial void OnChecksumChanging(global::System.String value);
        partial void OnChecksumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PluginId
        {
            get
            {
                return _PluginId;
            }
            set
            {
                OnPluginIdChanging(value);
                ReportPropertyChanging("PluginId");
                _PluginId = StructuralObject.SetValidValue(value, "PluginId");
                ReportPropertyChanged("PluginId");
                OnPluginIdChanged();
            }
        }
        private global::System.Int32 _PluginId;
        partial void OnPluginIdChanging(global::System.Int32 value);
        partial void OnPluginIdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NIHEI.SC4Buddy.Entities.Remote", "FK_PluginFile_Plugin", "Plugin")]
        public RemotePlugin Plugin
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RemotePlugin>("NIHEI.SC4Buddy.Entities.Remote.FK_PluginFile_Plugin", "Plugin").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RemotePlugin>("NIHEI.SC4Buddy.Entities.Remote.FK_PluginFile_Plugin", "Plugin").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<RemotePlugin> PluginReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<RemotePlugin>("NIHEI.SC4Buddy.Entities.Remote.FK_PluginFile_Plugin", "Plugin");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<RemotePlugin>("NIHEI.SC4Buddy.Entities.Remote.FK_PluginFile_Plugin", "Plugin", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="NIHEI.SC4Buddy.Entities.Remote", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        /// <param name="salt">Initial value of the Salt property.</param>
        /// <param name="rights">Initial value of the Rights property.</param>
        /// <param name="passphrase">Initial value of the Passphrase property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String email, global::System.String salt, global::System.String rights, global::System.Byte[] passphrase)
        {
            User user = new User();
            user.Id = id;
            user.Email = email;
            user.Salt = salt;
            user.Rights = rights;
            user.Passphrase = passphrase;
            return user;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value, "Id");
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false, "Email");
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Salt
        {
            get
            {
                return _Salt;
            }
            set
            {
                OnSaltChanging(value);
                ReportPropertyChanging("Salt");
                _Salt = StructuralObject.SetValidValue(value, false, "Salt");
                ReportPropertyChanged("Salt");
                OnSaltChanged();
            }
        }
        private global::System.String _Salt;
        partial void OnSaltChanging(global::System.String value);
        partial void OnSaltChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Rights
        {
            get
            {
                return _Rights;
            }
            set
            {
                OnRightsChanging(value);
                ReportPropertyChanging("Rights");
                _Rights = StructuralObject.SetValidValue(value, false, "Rights");
                ReportPropertyChanged("Rights");
                OnRightsChanged();
            }
        }
        private global::System.String _Rights;
        partial void OnRightsChanging(global::System.String value);
        partial void OnRightsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Passphrase
        {
            get
            {
                return StructuralObject.GetValidValue(_Passphrase);
            }
            set
            {
                OnPassphraseChanging(value);
                ReportPropertyChanging("Passphrase");
                _Passphrase = StructuralObject.SetValidValue(value, false, "Passphrase");
                ReportPropertyChanged("Passphrase");
                OnPassphraseChanged();
            }
        }
        private global::System.Byte[] _Passphrase;
        partial void OnPassphraseChanging(global::System.Byte[] value);
        partial void OnPassphraseChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("NIHEI.SC4Buddy.Entities.Remote", "FK_Author_User", "Author")]
        public EntityCollection<Author> Authors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Author>("NIHEI.SC4Buddy.Entities.Remote.FK_Author_User", "Author");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Author>("NIHEI.SC4Buddy.Entities.Remote.FK_Author_User", "Author", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
